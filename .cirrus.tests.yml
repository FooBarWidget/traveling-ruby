

# ========================================
# Standalone Testing Tasks
# ========================================


gem_test_task: 
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
  script: |
    brew uninstall libyaml
    find shared osx -name '*.sh'
    find shared osx -name '*.sh' -exec chmod +x {} \;
    find osx/output/**/bin
    find osx/output/**/bin -exec chmod +x {} \;
    find osx/output/**/bin.real
    find osx/output/**/bin.real -exec chmod +x {} \;
    cd osx
    ls -1 output | xargs -I '{}' ./test-gems.sh output/'{}'

gem_unarchive_and_test_task: 
  env: 
    matrix:
      image: debian:bookworm-slim
      image: bitnami/minideb:latest
      # image: busybox:glibc
      # image: busybox:uclibc
      # image: busybox:musl
      # image: centos:centos8
      # image: centos:centos9
      # image: quay.io/centos/centos:stream
      # image: quay.io/centos/centos:stream9
      # image: quay.io/centos/centos:stream9-minimal
      # image: quay.io/centos/centos:stream8
      # image: quay.io/centos/centos:8
      # image: centos:centos7
      # image: alpine:latest
      # image: alpine:3.18
      # image: alpine:3.17
      # image: alpine:3.16
      # image: alpine:3.15
      # image: ubuntu:latest
      # image: ubuntu:20.04
      # image: ubuntu:18.04
      # image: ubuntu:16.04
      # image: fedora:latest
      # image: fedora:34
      # image: fedora:33
      # image: fedora:32
      # image: opensuse/leap:latest
      # image: opensuse/leap:15.3
      # image: opensuse/leap:15.2
      # image: opensuse/leap:15.1
      # image: opensuse/leap:15.0
      # image: gentoo/stage3-amd64
      # image: raspbian/stretch
      # image: raspbian/buster
      # image: raspbian/bullseye

  container:
    image: $image
  check_dep_script: |
    ldconfig -v | grep libffi || echo "libffi not found"
    ldconfig -v | grep libyaml || echo "libyaml not found"
  unpack_script:
    ls -1 *.tar.gz | while read file; do \
    name=$(echo $file | cut -d'-' -f1-2); \
    pkg_date=$(echo $file | cut -d'-' -f3); \
    ruby_version=$(echo $file | cut -d'-' -f4); \
    os=$(echo $file | cut -d'-' -f5); \
    arch=$(echo $file | cut -d'-' -f6 | cut -d'.' -f1); \
    size=$(du -h $file | cut -f1); \
    echo "$name $pkg_date $ruby_version $os $arch $size" >> /output/output.txt; \
    tar -czvf /output/$ruby_version-$arch.tar.gz $file;



# ========================================
# MacOS
# ========================================




env:
  repo: you54f/traveling-ruby
  NEXT_TAG: rel-20230601-next
  GITHUB_TOKEN: ENCRYPTED[7f3663f35400d0e1f8e0fec456af6b75a07b0fd2d0632fe1697b8fb73af5e78245144216288d88d2daa681ccd159e07d]
  xcode_version: '12.2'
  # https://xcodereleases.com/
  # https://developer.apple.com/download/all/
  # https://archive.org/download/xcode-12.2

  # https://archive.org/details/sucatalog_001-77532
  # https://download.developer.apple.com/Developer_Tools/Command_Line_Tools_for_Xcode_12.2/Command_Line_Tools_for_Xcode_12.2.dmg


mac_check: &mac_check
  check_script: |
    ruby --version || echo
    bundler --version || echo "bundler --version failed"
    brew leaves || echo "brew leaves failed"
    xcode-select -p || echo "xcode-select -p failed"

mac_ruby_setup: &mac_ruby_setup
  mac_ruby_script: |
    bundler --version
    sudo gem install bundler:2.4.10
    bundler --version

# mac_ruby_setup: &mac_ruby_setup
#   mac_ruby_script: |
#     rbenv global system
#     sudo gem install bundler:2.4.10
#     rbenv rehash
#     ruby --version
#     bundler --version
#     rbenb global 3.2.2
#     ruby --version
#     bundler --version

mac_xcode_setup: &mac_xcode_setup
  mac_xcode_setup_script: |
    echo 'export PATH=/usr/local/bin/:$PATH' >> ~/.zprofile
    source ~/.zprofile
    curl -LO https://github.com/RobotsAndPencils/xcodes/releases/latest/download/xcodes.zip
    ls
    unzip xcodes.zip
    rm xcodes.zip
    chmod +x xcodes
    sudo mkdir -p /usr/local/bin/
    sudo mv xcodes /usr/local/bin/xcodes
    xcodes version
    curl -LO https://archive.org/download/xcode-${xcode_version}/Xcode_${xcode_version}.xip
    # curl -fsLO https://developer.apple.com/services-account/download?path=/Developer_Tools/Xcode_${xcode_version}/Xcode_${xcode_version}.xip
    ls
    xcodes install ${xcode_version} --experimental-unxip --path $PWD/Xcode_${xcode_version}.xip
    sudo rm -rf ~/.Trash/*
    xcodes select ${var.xcode_version}
    xcodebuild -downloadAllPlatforms
    xcodebuild -runFirstLaunch
    xcode-select -p

mac_xcode_command_line_tools_setup: &mac_xcode_command_line_tools_setup
  mac_xcode_command_line_tools_setup_script: |
    xcode-select --install > /dev/null 2>&1
    if [ 0 == $? ]; then
        sleep 1
        osascript <<EOD
    tell application "System Events"
        tell process "Install Command Line Developer Tools"
            keystroke return
            click button "Agree" of window "License Agreement"
        end tell
    end tell
    EOD
    else
        echo "Command Line Developer Tools are already installed!"
    fi


cirrus_cli_setup: &cirrus_cli_setup
  cirrus_cli_script: |
    find osx shared -name '*.sh'
    find osx shared -name '*.sh' -exec chmod +x {} \;

mac_ventura_vanilla_packager_task: 
  env:
    PLATFORM: osx
    matrix:
      - script: rake --trace package:arm64:3.0.6
      # - script: rake --trace package:arm64:3.2.2
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-vanilla:latest
  # <<: *mac_check
  # <<: *mac_ruby_setup
  <<: *mac_xcode_command_line_tools_setup
  <<: *cirrus_cli_setup
  build_script: |
    cd $PLATFORM
    rake --tasks
    $script
  <<: *BINARY_ATRIFACTS

mac_ventura_base_packager_task: 
  env:
    PLATFORM: osx
    matrix:
      - script: rake --trace package
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
  <<: *mac_check
  <<: *mac_ruby_setup
  <<: *cirrus_cli_setup
  build_script: |
    cd $PLATFORM
    rake --tasks
    $script
  <<: *BINARY_ATRIFACTS

# ========================================
# MacOS - System Check
# ========================================


mac_ventura_base_check_task: 
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
  <<: *mac_check

mac_ventura_vanilla_check_task: 
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-vanilla:latest
  <<: *mac_check

mac_monteray_base_check_task: 
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monteray-base:latest
  <<: *mac_check

mac_monteray_vanilla_check_task: 
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monteray-vanilla:latest
  <<: *mac_check
