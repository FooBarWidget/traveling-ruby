env:
  repo: you54f/traveling-ruby
  NEXT_TAG: rel-20230529-next
  GITHUB_TOKEN: ENCRYPTED[7f3663f35400d0e1f8e0fec456af6b75a07b0fd2d0632fe1697b8fb73af5e78245144216288d88d2daa681ccd159e07d]

PRE_RELEASE_TASK: &PRE_RELEASE_TASK
  script: |
    RELEASE_NOTES=$(git log --pretty=format:"%s" $(git describe --tags --abbrev=0)..HEAD)
    gh release create "${NEXT_TAG}" --prerelease --draft --repo "${REPO}" --title "${NEXT_TAG}" --notes "${RELEASE_NOTES}"

UPLOAD_TASK: &UPLOAD_TASK
  script: |
    gh release upload "${NEXT_TAG}" $PLATFORM/*.tar.gz --repo "${REPO}" --clobber

DOWNLOAD_TASK: &DOWNLOAD_TASK
  script: |
    gh release download  "${NEXT_TAG}" --repo you54f/traveling-ruby -p *$PLATFORM-$CIRRUS_ARCH*


RUBY_VERSIONS_TASKS: &RUBY_VERSIONS_TASKS
  - script: rake package:$ARCHITECTURES:3.3.0-preview1
    test: rake testdocker:$ARCHITECTURES:3.3.0-preview1
  - script: rake package:$ARCHITECTURES:3.1.4
    test: rake testdocker:$ARCHITECTURES:3.1.4
  - script: rake package:$ARCHITECTURES:3.1.2
    test: rake testdocker:$ARCHITECTURES:3.1.2
  - script: rake package:$ARCHITECTURES:3.0.6
    test: rake testdocker:$ARCHITECTURES:3.0.6
  - script: rake package:$ARCHITECTURES:3.0.4
    test: rake testdocker:$ARCHITECTURES:3.0.4
  - script: rake package:$ARCHITECTURES:2.7.8
    test: rake testdocker:$ARCHITECTURES:2.7.8
  - script: rake package:$ARCHITECTURES:2.6.10
    test: rake testdocker:$ARCHITECTURES:2.6.10


RUBY_VERSIONS_MULTI_BUILDER: &RUBY_VERSIONS_MULTI_BUILDER
  package_script: cd $PLATFORM && rake package:$ARCHITECTURES

RUBY_VERSIONS_MATRIX_RUNNER: &RUBY_VERSIONS_MATRIX_RUNNER
  package_script: cd $PLATFORM && rake package:$ARCHITECTURES
  build_script: |
    cd $PLATFORM && $script
  test_script: |
    cd $PLATFORM && $test

ENV_TEMPLATE: &ENV_TEMPLATE
  ARCHITECTURES: $CIRRUS_ARCH
  SANITY_CHECK_OUTPUT_IGNORE: "true"

ENV_CHECK_SCRIPT: &ENV_CHECK_SCRIPT
  check_script: |
    uname -a
    echo "CIRRUS_ARCH: $CIRRUS_ARCH"
    echo "PLATFORM: $PLATFORM"
    echo "script: $script"
    echo "NEXT_TAG: $NEXT_TAG"
    echo "ARCHITECTURES: $ARCHITECTURES"
    echo "repo: $repo"
    echo "script: $script"

BINARY_ATRIFACTS: &BINARY_ATRIFACTS
  binary_artifacts:
    path: "$PLATFORM/*.tar.gz"

## The <os>_<arch>_matrix_builder jobs are used to build each 
## version of ruby on seperate runners and run a test suite
## of docker containers to ensure the binaries are working

linux_arm64_matrix_docker_builder:
  only_if: $CIRRUS_CHANGE_TITLE =~ 'ci\(matrix-linux-arm64\).*'
  env:
    CIRRUS_ARCH: arm64
    PLATFORM: linux
    <<: *ENV_TEMPLATE
    matrix:
      <<: *RUBY_VERSIONS_TASKS
  <<: *ENV_CHECK_SCRIPT
  <<: *RUBY_VERSIONS_MATRIX_RUNNER
  # <<: *UPLOAD_TASK
  <<: *BINARY_ATRIFACTS

linux_x64_matrix_docker_builder:
  only_if: $CIRRUS_CHANGE_TITLE =~ 'ci\(matrix-linux-x86_64\).*'
  env:
    CIRRUS_ARCH: amd64
    PLATFORM: linux
    <<: *ENV_TEMPLATE
  <<: *RUBY_VERSIONS_MATRIX_RUNNER
  # <<: *UPLOAD_TASK
  <<: *BINARY_ATRIFACTS

## The <os>_<arch>_packager_docker_builder jobs are used to build
## each version of ruby on a single runner. The rake task has been
## modified to build all versions of ruby in a single run and not fail

linux_arm64_docker_builder:
  only_if: $CIRRUS_CHANGE_TITLE =~ 'ci\(packager-linux-arm64\).*'
  env:
    CIRRUS_ARCH: arm64
    PLATFORM: linux
    <<: *ENV_TEMPLATE
  <<: *ENV_CHECK_SCRIPT
  <<: *RUBY_VERSIONS_MATRIX_RUNNER
  # <<: *UPLOAD_TASK
  <<: *BINARY_ATRIFACTS

linux_x64_packager_docker_builder:
  only_if: $CIRRUS_CHANGE_TITLE =~ 'ci\(packager-linux-x86_64\).*'
  env:
    CIRRUS_ARCH: amd64
    PLATFORM: linux
    <<: *ENV_TEMPLATE
    matrix:
      <<: *RUBY_VERSIONS_TASKS
  <<: *RUBY_VERSIONS_MATRIX_RUNNER
  # <<: *UPLOAD_TASK
  <<: *BINARY_ATRIFACTS




## General tasks for GitHub Releases
## These tasks are used to create a release, upload the binaries
## and download the binaries for testing

## The available tasks are:
## prerelease_task: Creates a prerelease
## release_task: Creates a release
## upload_task: Uploads the binaries to the release
## download_task: Downloads the binaries from the release

prerelease_task:
  only_if: $CIRRUS_CHANGE_TITLE =~ 'ci\(prerelease\).*'
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
  env:
    GH_TOKEN: $GITHUB_TOKEN
  <<: *PRE_RELEASE_TASK

upload_task:
  only_if: $CIRRUS_CHANGE_TITLE =~ 'ci\(upload\).*'
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
  env:
    GH_TOKEN: $GITHUB_TOKEN
  <<: *UPLOAD_TASK

# release_task: 
#   macos_instance:
#     image: ghcr.io/cirruslabs/macos-ventura-base:latest
#   env:
#     GH_TOKEN: $GITHUB_TOKEN
#   <<: *RELEASE_TASK

download_task:
  only_if: $CIRRUS_CHANGE_TITLE =~ 'ci\(download\).*'
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
  env:
    GH_TOKEN: $GITHUB_TOKEN
  <<: *DOWNLOAD_TASK
  script: ls